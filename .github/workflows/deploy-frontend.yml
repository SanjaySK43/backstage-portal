name: Deploy Frontend to Netlify

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (Yarn)
        run: |
          corepack enable
          corepack prepare yarn@4.4.1 --activate

      - name: Restore Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            **/.eslintcache
            packages/app/dist
            plugins/*/dist
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate TypeScript declarations
        run: yarn tsc

      - name: Build plugins
        run: |
          cd plugins/my-dashboard && npx backstage-cli package build --skip-build-dependencies
          cd ../my-plugin && npx backstage-cli package build --skip-build-dependencies

      - name: Build frontend
        run: yarn workspace app build
        env:
          CI: false

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './packages/app/dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
