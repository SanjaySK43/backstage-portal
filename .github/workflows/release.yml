name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (Yarn)
        run: |
          corepack enable
          corepack prepare yarn@4.4.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate TypeScript declarations
        run: yarn tsc

      - name: Build all packages
        run: yarn build:all

      - name: Run tests
        run: yarn test:all

      - name: Build Docker images
        run: |
          yarn build-image
          docker tag backstage ghcr.io/${{ github.repository }}/backstage:${{ github.ref_name }}
          docker tag backstage ghcr.io/${{ github.repository }}/backstage:latest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ github.repository }}/backstage:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/backstage:latest

      - name: Generate changelog
        id: changelog
        run: |
          echo "## Changes in ${{ github.ref_name }}" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
